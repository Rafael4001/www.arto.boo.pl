{"version":3,"file":"static/webpack/static\\development\\pages\\demo.js.d3188eea6be1ff4d5c67.hot-update.js","sources":["webpack:///./src/components/TrackContainer/TrackContainer.js","webpack:///./src/components/TrackContainer/TrackContainer.style.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from 'classnames';\r\nimport { withMediaProps } from 'react-media-player'\r\n\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { SONGS_IMAGES } from \"../../constants\";\r\n\r\nimport Image from \"../Image\";\r\n\r\n\r\nclass TrackContainer extends Component {\r\n  shouldComponentUpdate({media}) {\r\n    return this.props.media.isPlaying !== media.isPlaying\r\n  }\r\n\r\n  _handlePlayPause = () => {\r\n    this.props.media.playPause()\r\n  }\r\n\r\n\r\n  handlePlayClick = () => {\r\n    this.props.onClickPlay();\r\n    this.props.media.play()\r\n  };\r\n\r\n\r\n  render() {\r\n    const {classes, track, actualPlayingTrackMp3Name, media} = this.props;\r\n\r\n    const trackImage = track.imgSrc ? track.imgSrc : SONGS_IMAGES.DefaultSongImage;\r\n\r\n    return (\r\n      <div className={classNames(classes.mainContainer, {[classes.activeBackground]: actualPlayingTrackMp3Name === track.name})}>\r\n        <div className={classes.songImage}>\r\n          <Image imgSrc={trackImage}/>\r\n        </div>\r\n        {actualPlayingTrackMp3Name === track.mp3Name && media.isPlaying ?\r\n          (<Button\r\n            className={classes.myButton}\r\n            key={track.mp3Name}\r\n            onClick={media.pause}\r\n          >\r\n            <PauseCircleFilledIcon className={classes.buttonIcon}/>\r\n          </Button>)\r\n          :\r\n          (<Button\r\n            className={classes.myButton}\r\n            key={track.mp3Name}\r\n            onClick={this.handlePlayClick}\r\n          >\r\n            <PlayCircleFilledIcon className={classes.buttonIcon}/>\r\n          </Button>)\r\n        }\r\n        <div>\r\n          <div className={classes.trackName}>{track.name}</div>\r\n\r\n          <div className={classes.trackArtistText}>({track.artist && ` - ${track.artist}`})</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTrackContainer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  track: PropTypes.object.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  actualPlayingTrackMp3Name: PropTypes.string,\r\n};\r\n\r\nTrackContainer.displayName = 'TrackContainer';\r\n\r\n\r\nexport default withMediaProps(TrackContainer)\r\n","import { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TrackContainer from './TrackContainer'\r\nimport { COLORS } from \"../../constants\";\r\n\r\n\r\nconst styles = {\r\n  mainContainer:{\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    margin: '0.1rem',\r\n    padding: '0.1rem',\r\n    backgroundColor: `${COLORS.red.medium}`,\r\n    color: \"#FFF\",\r\n  },\r\n  myButton:{\r\n    width: '1rem',\r\n    padding: '0.1rem',\r\n  },\r\n  buttonIcon:{\r\n    fontSize: '2rem',\r\n    color: '#FFF',\r\n  },\r\n  songImage:{\r\n    width: '3rem',\r\n    height: '3rem',\r\n  },\r\n  activeBackground:{\r\n    // backgroundColor: 'yellow',  //TODO naprawic tutaj BUGa z odtwarzaczem\r\n  },\r\n  trackName:{\r\n  fontSize: '0.8rem',\r\n    color: COLORS.grey.dark\r\n  },\r\n  trackArtistText:{\r\n  fontSize: '0.8rem',\r\n    color: COLORS.grey.dark\r\n  }\r\n};\r\n\r\nexport default withStyles(styles)(TrackContainer);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;;;;;;AAbA;AAAA;AACA;AACA;;;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAlDA;AACA;AAoDA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAGA;;;;;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AAAA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AA5BA;AAkCA;;;;A","sourceRoot":""}
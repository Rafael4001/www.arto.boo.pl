{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst STATUS = {\n  BUSY: \"busy\",\n  EMPTY: \"empty\",\n  RESERVATION: \"reservation\",\n  HOLIDAY: \"holiday\",\n  UNDEFINED: \"undefined\"\n};\nconst empty = STATUS.EMPTY;\nconst busy = STATUS.BUSY;\nconst holiday = STATUS.HOLIDAY;\n\nclass CustomBodyOfMonth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showDetails: this.props.showDetails //Tutaj jest do poprawy architektura TODO\n\n    });\n  }\n\n  render() {\n    const {\n      classes,\n      place,\n      status\n    } = this.props;\n    const classNameMain = classNames(classes.main, {\n      [classes.busy]: status === STATUS.BUSY,\n      [classes.holiday]: status === STATUS.HOLIDAY,\n      [classes.emptyContainer]: status === STATUS.EMPTY || STATUS.UNDEFINED\n    });\n\n    const getView = status => {\n      switch (status) {\n        case busy:\n          return __jsx(\"div\", {\n            className: classes.infoBusy\n          }, place);\n\n        case empty:\n          return __jsx(\"div\", {\n            className: classes.infoEmpty\n          }, \"BRAK\");\n\n        case holiday:\n          return __jsx(\"div\", {\n            className: classes.infoHoliday\n          }, \"Wakacje\");\n      }\n    };\n\n    function toggleDetails(item) {\n      alert(item);\n      this.setState((state, props) => {\n        return {\n          showDetails: !state.showDetails\n        };\n      });\n    }\n\n    const getDetails = () => __jsx(\"div\", {\n      className: classes.rowInfo\n    }, this.props.status === busy && __jsx(\"div\", null, __jsx(Typography, {\n      type: \"p\",\n      className: classes.details\n    }, \"hotel: \", this.props.hotel), __jsx(Typography, {\n      type: \"p\",\n      className: classes.details\n    }, \"adres: \", this.props.address)));\n\n    return __jsx(\"div\", {\n      className: classNameMain // onClick={() => {\n      //   toggleDetails(this.props.day)\n      // }}\n\n    }, __jsx(\"div\", {\n      className: classes.rowContainer\n    }, __jsx(\"div\", {\n      className: classes.detailsMainContainer\n    }, __jsx(Typography, {\n      type: \"span\",\n      className: classes.day\n    }, this.props.day), getDetails(), __jsx(Typography, {\n      type: \"p\",\n      className: classes.details\n    }, this.props.description)), __jsx(\"div\", {\n      className: classes.statusContainer\n    }, getView(this.props.status))), this.props.children);\n  }\n\n}\n\nCustomBodyOfMonth.defaultProps = {\n  address: '',\n  description: '',\n  hotel: '',\n  place: ''\n};\nCustomBodyOfMonth.displayName = 'CustomBodyOfMonth';\nexport default CustomBodyOfMonth;","map":null,"metadata":{},"sourceType":"module"}
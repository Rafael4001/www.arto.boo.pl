{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\IT_projects_Edu-Lab\\\\www.zespolarto.pl\\\\src\\\\views\\\\Terms\\\\Terms.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport { YEAR_2020 } from '../../termsJSON/terminy2020';\nimport { YEAR_2021 } from '../../termsJSON/terminy2021';\nimport { YEAR_2022 } from '../../termsJSON/terminy2022';\nimport Months from \"../../components/Months\";\nimport TabPanel from \"./TabPanel/index\";\nimport { STATUS } from \"../../constants\";\nconst YEAR_2020_TITLE_TEXT = \"2020\";\nconst YEAR_2021_TITLE_TEXT = \"2021\";\nconst YEAR_2022_TITLE_TEXT = \"2022\";\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst howMuchTermsWithStatus = (element, status) => {\n  return element.status === status;\n};\n\nclass Terms extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: 0\n    });\n\n    _defineProperty(this, \"handleChange\", (event, newValue) => {\n      this.setState({\n        value: newValue\n      });\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      value\n    } = this.state;\n    const years = [{\n      name: YEAR_2020_TITLE_TEXT,\n      details: YEAR_2020\n    }, {\n      name: YEAR_2021_TITLE_TEXT,\n      details: YEAR_2021\n    }, {\n      name: YEAR_2022_TITLE_TEXT,\n      details: YEAR_2022\n    }];\n\n    const getWeddingsYearAmount = yearDetails => {\n      let allweeddings = 0;\n      yearDetails.map(month => {\n        const weddingsAmount = month.days.filter(function (element) {\n          return howMuchTermsWithStatus(element, STATUS.BUSY);\n        });\n        allweeddings = allweeddings + weddingsAmount.length;\n      });\n      return allweeddings;\n    };\n\n    return __jsx(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(AppBar, {\n      position: \"fixed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(Tabs, {\n      value: value,\n      onChange: this.handleChange,\n      \"aria-label\": \"simple tabs example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, years.map((year, id) => {\n      const label = `${year.name}`;\n      return __jsx(Tab, _extends({\n        key: year.name,\n        label: label\n      }, a11yProps(id), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }));\n    }))), years.map((year, id) => {\n      const weddingAmount = getWeddingsYearAmount(year.details);\n      return __jsx(TabPanel, {\n        key: id,\n        value: value,\n        index: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, __jsx(Months, {\n        table: year.details,\n        weddingAmount: weddingAmount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}\n\n;\nTerms.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nTerms.displayName = 'Terms';\nexport default Terms;","map":{"version":3,"sources":["C:/IT_projects_Edu-Lab/www.zespolarto.pl/src/views/Terms/Terms.js"],"names":["React","Component","PropTypes","AppBar","Tab","Tabs","YEAR_2020","YEAR_2021","YEAR_2022","Months","TabPanel","STATUS","YEAR_2020_TITLE_TEXT","YEAR_2021_TITLE_TEXT","YEAR_2022_TITLE_TEXT","a11yProps","index","id","howMuchTermsWithStatus","element","status","Terms","value","event","newValue","setState","render","classes","props","state","years","name","details","getWeddingsYearAmount","yearDetails","allweeddings","map","month","weddingsAmount","days","filter","BUSY","length","root","handleChange","year","label","weddingAmount","propTypes","object","isRequired","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\n\r\nimport { YEAR_2020 } from '../../termsJSON/terminy2020';\r\nimport { YEAR_2021 } from '../../termsJSON/terminy2021';\r\nimport { YEAR_2022 } from '../../termsJSON/terminy2022';\r\n\r\nimport Months from \"../../components/Months\";\r\nimport TabPanel from \"./TabPanel/index\";\r\nimport { STATUS } from \"../../constants\";\r\n\r\n\r\nconst YEAR_2020_TITLE_TEXT = \"2020\";\r\nconst YEAR_2021_TITLE_TEXT = \"2021\";\r\nconst YEAR_2022_TITLE_TEXT = \"2022\";\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst howMuchTermsWithStatus = (element, status) => {\r\n    return element.status === status;\r\n};\r\n\r\nclass Terms extends Component {\r\n    state = {\r\n        value: 0\r\n    };\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.setState({value: newValue})\r\n    };\r\n\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        const {value} = this.state;\r\n        const years = [\r\n            {\r\n                name: YEAR_2020_TITLE_TEXT,\r\n                details: YEAR_2020,\r\n            },\r\n            {\r\n                name: YEAR_2021_TITLE_TEXT,\r\n                details: YEAR_2021,\r\n            },\r\n            {\r\n                name: YEAR_2022_TITLE_TEXT,\r\n                details: YEAR_2022,\r\n            }\r\n        ];\r\n        const getWeddingsYearAmount = (yearDetails) => {\r\n            let allweeddings = 0;\r\n\r\n            yearDetails.map((month) => {\r\n                const weddingsAmount = month.days.filter(function(element) {\r\n                    return howMuchTermsWithStatus(element, STATUS.BUSY)\r\n                });\r\n                allweeddings = allweeddings + weddingsAmount.length;\r\n            });\r\n\r\n            return allweeddings\r\n        };\r\n\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"fixed\">\r\n                    <Tabs value={value} onChange={this.handleChange} aria-label=\"simple tabs example\">\r\n                        {years.map((year, id) => {\r\n                            const label = `${year.name}`;\r\n\r\n                            return (\r\n                                <Tab key={year.name} label={label} {...a11yProps(id)} />\r\n                            )\r\n                        })}\r\n                    </Tabs>\r\n                </AppBar>\r\n\r\n                {years.map((year, id) => {\r\n                    const weddingAmount = getWeddingsYearAmount(year.details);\r\n\r\n                    return (\r\n                        <TabPanel key={id} value={value} index={id}>\r\n                            <Months table={year.details} weddingAmount={weddingAmount}/>\r\n                        </TabPanel>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nTerms.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nTerms.displayName = 'Terms';\r\n\r\nexport default Terms;\r\n"]},"metadata":{},"sourceType":"module"}
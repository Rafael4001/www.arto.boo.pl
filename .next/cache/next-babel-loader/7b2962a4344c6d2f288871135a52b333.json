{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\IT_projects_Edu-Lab\\\\arto_WWW\\\\www.arto.boo.pl\\\\src\\\\components\\\\CustomBodyOfMonth\\\\CustomBodyOfMonth.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst STATUS = {\n  BUSY: \"busy\",\n  EMPTY: \"empty\",\n  RESERVATION: \"reservation\",\n  HOLIDAY: \"holiday\",\n  UNDEFINED: \"undefined\"\n};\nconst empty = STATUS.EMPTY;\nconst busy = STATUS.BUSY;\nconst holiday = STATUS.HOLIDAY;\n\nclass CustomBodyOfMonth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showDetails: this.props.showDetails //Tutaj jest do poprawy architektura TODO\n\n    });\n  }\n\n  render() {\n    const {\n      classes,\n      place,\n      status\n    } = this.props;\n    const classNameMain = classNames(classes.main, {\n      [classes.busy]: status === STATUS.BUSY,\n      [classes.holiday]: status === STATUS.HOLIDAY,\n      [classes.emptyContainer]: status === STATUS.EMPTY || STATUS.UNDEFINED\n    });\n\n    const getView = status => {\n      switch (status) {\n        case busy:\n          return __jsx(\"div\", {\n            className: classes.infoBusy,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, place);\n\n        case empty:\n          return __jsx(\"div\", {\n            className: classes.infoEmpty,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, \"BRAK\");\n\n        case holiday:\n          return __jsx(\"div\", {\n            className: classes.infoHoliday,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \"Wakacje\");\n      }\n    };\n\n    function createData(date, place, fat, carbs, protein) {\n      return {\n        date,\n        place,\n        fat,\n        carbs,\n        protein\n      };\n    }\n\n    const rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\n\n    function toggleDetails(item) {\n      alert(item);\n      this.setState((state, props) => {\n        return {\n          showDetails: !state.showDetails\n        };\n      });\n    }\n\n    const getDetails = () => this.props.status === busy ? __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(Typography, {\n      type: \"p\",\n      className: classes.details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"hotel: \", this.props.hotel), __jsx(Typography, {\n      type: \"p\",\n      className: classes.details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"adres: \", this.props.address)) : __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"WOLNE\");\n\n    return __jsx(\"div\", {\n      className: classNameMain // onClick={() => {\n      //   toggleDetails(this.props.day)\n      // }}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.rowContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(Typography, {\n      type: \"span\",\n      className: classes.day,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.props.day), getDetails(), __jsx(Typography, {\n      type: \"p\",\n      className: classes.details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.props.description)), __jsx(\"div\", {\n      className: classes.statusContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, getView(this.props.status))), __jsx(TableContainer, {\n      component: Paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, __jsx(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Data\"), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Miejsce\"), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Lokal\"), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"B\\u0142ogos\\u0142awie\\u0144stwo\"), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Protein\\xA0(g)\"))), __jsx(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, rows.map(row => __jsx(TableRow, {\n      key: row.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, row.date), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, row.place), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, row.place), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, row.carbs), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, row.protein)))))), this.props.children);\n  }\n\n}\n\nCustomBodyOfMonth.defaultProps = {\n  address: '',\n  description: '',\n  hotel: '',\n  place: ''\n};\nCustomBodyOfMonth.displayName = 'CustomBodyOfMonth';\nexport default CustomBodyOfMonth;","map":{"version":3,"sources":["C:/IT_projects_Edu-Lab/arto_WWW/www.arto.boo.pl/src/components/CustomBodyOfMonth/CustomBodyOfMonth.js"],"names":["React","Component","classNames","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","STATUS","BUSY","EMPTY","RESERVATION","HOLIDAY","UNDEFINED","empty","busy","holiday","CustomBodyOfMonth","showDetails","props","render","classes","place","status","classNameMain","main","emptyContainer","getView","infoBusy","infoEmpty","infoHoliday","createData","date","fat","carbs","protein","rows","toggleDetails","item","alert","setState","state","getDetails","details","hotel","address","rowContainer","day","description","statusContainer","table","map","row","name","children","defaultProps","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst STATUS = {\r\n  BUSY: \"busy\",\r\n  EMPTY: \"empty\",\r\n  RESERVATION: \"reservation\",\r\n  HOLIDAY: \"holiday\",\r\n  UNDEFINED: \"undefined\",\r\n};\r\n\r\n\r\nconst empty = STATUS.EMPTY;\r\nconst busy = STATUS.BUSY;\r\nconst holiday = STATUS.HOLIDAY;\r\n\r\n\r\nclass CustomBodyOfMonth extends Component {\r\n  state = {\r\n    showDetails: this.props.showDetails //Tutaj jest do poprawy architektura TODO\r\n  };\r\n\r\n  render() {\r\n    const {classes, place, status} = this.props;\r\n\r\n\r\n    const classNameMain = classNames(classes.main, {\r\n        [classes.busy]: status === STATUS.BUSY,\r\n        [classes.holiday]: status === STATUS.HOLIDAY,\r\n        [classes.emptyContainer]: status === STATUS.EMPTY || STATUS.UNDEFINED,\r\n      }\r\n    );\r\n\r\n    const getView = (status) => {\r\n      switch (status) {\r\n        case busy:\r\n          return (<div className={classes.infoBusy}>{place}</div>);\r\n        case empty:\r\n          return (<div className={classes.infoEmpty}>BRAK</div>);\r\n        case holiday:\r\n          return (<div className={classes.infoHoliday}>Wakacje</div>)\r\n      }\r\n    };\r\n\r\n    function createData(date, place, fat, carbs, protein) {\r\n      return { date, place, fat, carbs, protein };\r\n    }\r\n    const rows = [\r\n      createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n      createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n      createData('Eclair', 262, 16.0, 24, 6.0),\r\n      createData('Cupcake', 305, 3.7, 67, 4.3),\r\n      createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n    ];\r\n\r\n\r\n    function toggleDetails(item) {\r\n      alert(item);\r\n      this.setState((state, props) => {\r\n        return {\r\n          showDetails: !state.showDetails\r\n        };\r\n      });\r\n    }\r\n\r\n    const getDetails = () => (\r\n      this.props.status === busy ?\r\n        <div>\r\n          <Typography type={\"p\"} className={classes.details}>hotel: {this.props.hotel}</Typography>\r\n          <Typography type={\"p\"} className={classes.details}>adres: {this.props.address}</Typography>\r\n        </div>\r\n        : <div>WOLNE</div>\r\n    );\r\n\r\n    return (\r\n      <div\r\n        className={classNameMain}\r\n        // onClick={() => {\r\n        //   toggleDetails(this.props.day)\r\n        // }}\r\n      >\r\n        <div className={classes.rowContainer}>\r\n          <div>\r\n            <Typography type={\"span\"} className={classes.day}>{this.props.day}</Typography>\r\n            {getDetails()}\r\n            <Typography type={\"p\"} className={classes.details}>{this.props.description}</Typography>\r\n          </div>\r\n          <div className={classes.statusContainer}>\r\n            {getView(this.props.status)}\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Data</TableCell>\r\n                <TableCell align=\"right\">Miejsce</TableCell>\r\n                <TableCell align=\"right\">Lokal</TableCell>\r\n                <TableCell align=\"right\">Błogosławieństwo</TableCell>\r\n                <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map(row => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell component=\"th\" scope=\"row\">{row.date}</TableCell>\r\n                  <TableCell align=\"right\">{row.place}</TableCell>\r\n                  <TableCell align=\"right\">{row.place}</TableCell>\r\n                  <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                  <TableCell align=\"right\">{row.protein}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCustomBodyOfMonth.defaultProps = {\r\n  address: '',\r\n  description: '',\r\n  hotel: '',\r\n  place: '',\r\n};\r\n\r\nCustomBodyOfMonth.displayName = 'CustomBodyOfMonth';\r\n\r\nexport default CustomBodyOfMonth;\r\n"]},"metadata":{},"sourceType":"module"}
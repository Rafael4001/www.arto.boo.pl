{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\IT_projects_Edu-Lab\\\\arto_WWW\\\\www.arto.boo.pl\\\\src\\\\components\\\\Months\\\\Months.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport CustomBodyOfMonth from \"../CustomBodyOfMonth\";\nimport { Typography } from \"@material-ui/core\";\nimport CalendarToday from '@material-ui/icons/CalendarToday';\n\nvar Months = function Months(props) {\n  var classes = props.classes,\n      table = props.table;\n\n  var getMonthsDays = function getMonthsDays(days) {\n    return days.map(function (day) {\n      return __jsx(CustomBodyOfMonth, _extends({\n        key: day.day\n      }, day, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }));\n    });\n  };\n\n  var getMonths = function getMonths(months) {\n    return months.map(function (month) {\n      return __jsx(\"li\", {\n        key: month.name,\n        className: classes.dayContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, __jsx(Typography, {\n        className: classes.monthName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, __jsx(CalendarToday, {\n        classes: {\n          root: classes.icon\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), month.name), getMonthsDays(month.days));\n    });\n  };\n\n  return __jsx(\"ul\", {\n    className: classes.monthContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, getMonths(table), __jsx(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Dessert (100g serving)\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Calories\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Fat\\xA0(g)\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Carbs\\xA0(g)\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Protein\\xA0(g)\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, rows.map(function (row) {\n    return __jsx(TableRow, {\n      key: row.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, row.name), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, row.calories), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, row.fat), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, row.carbs), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, row.protein));\n  }))));\n};\n\nMonths.defaultProps = {};\nMonths.displayName = 'Months';\nexport default Months;","map":{"version":3,"sources":["C:/IT_projects_Edu-Lab/arto_WWW/www.arto.boo.pl/src/components/Months/Months.js"],"names":["React","CustomBodyOfMonth","Typography","CalendarToday","Months","props","classes","table","getMonthsDays","days","map","day","getMonths","months","month","name","dayContainer","monthName","root","icon","monthContainer","rows","row","calories","fat","carbs","protein","defaultProps","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport CustomBodyOfMonth from \"../CustomBodyOfMonth\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\n\r\nconst Months = (props) => {\r\n  const {classes, table} = props;\r\n\r\n  const getMonthsDays = (days) => (\r\n    days.map((day) => <CustomBodyOfMonth key={day.day} {...day} />)\r\n  );\r\n\r\n  const getMonths = (months) => (\r\n    months.map((month) => (\r\n      <li key={month.name} className={classes.dayContainer}>\r\n        <Typography className={classes.monthName}><CalendarToday classes={{ root: classes.icon }}/>{month.name}</Typography>\r\n        {getMonthsDays(month.days)}\r\n      </li>\r\n    ))\r\n  );\r\n\r\n  return (\r\n    <ul className={classes.monthContainer}>\r\n      {getMonths(table)}\r\n\r\n\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n\r\n    </ul>\r\n  )\r\n};\r\n\r\nMonths.defaultProps = {};\r\n\r\nMonths.displayName = 'Months';\r\n\r\n\r\nexport default Months;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
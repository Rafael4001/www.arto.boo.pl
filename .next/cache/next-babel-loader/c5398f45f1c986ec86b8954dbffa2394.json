{"ast":null,"code":"import _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nvar _jsxFileName = \"C:\\\\IT_projects_Edu-Lab\\\\arto_WWW\\\\www.arto.boo.pl\\\\src\\\\components\\\\PlayerCustomized\\\\PlayerCustomized.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Media, Player, controls } from 'react-media-player';\nimport PlayPause from '../../mp3Player/withMediaProps';\nimport TrackContainer from \"../TrackContainer\";\nimport { MUSIC, SONGS_IMAGES } from \"../../constants\";\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport AlbumIcon from '@material-ui/icons/Album';\nimport Image from \"../Image\";\nimport { Typography } from \"@material-ui/core\";\nvar CurrentTime = controls.CurrentTime,\n    SeekBar = controls.SeekBar,\n    Duration = controls.Duration,\n    Volume = controls.Volume,\n    MuteUnmute = controls.MuteUnmute;\n\nvar Panner =\n/*#__PURE__*/\nfunction () {\n  function Panner(_ref) {\n    var source = _ref.source,\n        audioContext = _ref.audioContext,\n        _ref$panningAmount = _ref.panningAmount,\n        panningAmount = _ref$panningAmount === void 0 ? 0 : _ref$panningAmount;\n\n    _classCallCheck(this, Panner);\n\n    this._source = source;\n    this._audioContext = audioContext;\n    this._initialPanningAmount = panningAmount;\n  }\n\n  _createClass(Panner, [{\n    key: \"connect\",\n    value: function connect() {\n      this._splitter = this._audioContext.createChannelSplitter(2);\n      this._gainLeft = this._audioContext.createGain();\n      this._gainRight = this._audioContext.createGain();\n      this._merger = this._audioContext.createChannelMerger(2);\n\n      this._source.connect(this._splitter, 0, 0);\n\n      this._splitter.connect(this._gainLeft, 0);\n\n      this._splitter.connect(this._gainRight, 1);\n\n      this._gainLeft.connect(this._merger, 0, 0);\n\n      this._gainRight.connect(this._merger, 0, 1);\n\n      return this._merger;\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(amount) {\n      this._gainLeft.gain.value = amount <= 0 ? 1 : 1 - amount;\n      this._gainRight.gain.value = amount >= 0 ? 1 : 1 + amount;\n    }\n  }]);\n\n  return Panner;\n}();\n\nvar tracks = [{\n  id: 0,\n  name: 'Do Tanńca Kawałek',\n  mp3Name: 'do_tanca_kawalek',\n  artist: 'Poparzeni kawą trzy',\n  imgSrc: SONGS_IMAGES.Naydis\n}, {\n  id: 1,\n  name: 'Kici Kici miał',\n  mp3Name: 'kici_kici_mial',\n  artist: 'Marcus',\n  imgSrc: SONGS_IMAGES.Naydis\n}, {\n  id: 2,\n  name: 'Konik na biegunach',\n  mp3Name: 'konik_na_biegunach',\n  artist: 'Urszula',\n  imgSrc: SONGS_IMAGES.Naydis\n}];\n\nvar PlayerCustomized =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlayerCustomized, _Component);\n\n  function PlayerCustomized() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlayerCustomized);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlayerCustomized)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      actualPlayingTrackMp3Name: tracks[0].mp3Name,\n      autoplay: false,\n      isPlaying: false,\n      actualSongImage: '',\n      actualSongName: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_connectSource\", function (source, audioContext) {\n      _this.panner = new Panner({\n        source: source,\n        audioContext: audioContext\n      });\n      return _this.panner.connect();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"trackList\", function () {\n      return tracks.map(function (track) {\n        return __jsx(TrackContainer, {\n          key: track.name,\n          track: track,\n          actualPlayingTrackMp3Name: _this.state.actualPlayingTrackMp3Name,\n          onClickPlay: function onClickPlay() {\n            return _this.setState({\n              actualPlayingTrackMp3Name: track.mp3Name,\n              actualSongName: track.name,\n              autoplay: true,\n              isPlaying: true,\n              actualSongImage: track.imgSrc ? track.imgSrc : SONGS_IMAGES.DefaultSongImage\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"playNextSong\", function () {\n      console.log('wlaczam kolejny numer');\n    });\n\n    return _this;\n  }\n\n  _createClass(PlayerCustomized, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        actualSongImage: tracks[0].imgSrc\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return __jsx(Media, {\n        ref: function ref(c) {\n          return _this2.media = c;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.mainContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.albumImageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.songImageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, __jsx(Image, {\n        imgSrc: this.state.actualSongImage,\n        className: classes.actualImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), __jsx(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, this.state.actualSongName ? this.state.actualSongName : 'Wybierz utwor'), __jsx(PlayPause, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: classes.seekBarContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.playerTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, __jsx(CurrentTime, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), \"/\", __jsx(Duration, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: classes.seekBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, __jsx(SeekBar, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: classes.actualSongPlayer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, __jsx(Player, {\n        ref: function ref(c) {\n          return _this2._player = c;\n        },\n        src: \"/mp3/\".concat(this.state.actualPlayingTrackMp3Name, \".mp3\"),\n        connectSource: this._connectSource,\n        useAudioObject: true,\n        autoPlay: this.state.autoplay,\n        isPlaying: this.state.isPlaying,\n        onEnded: this.playNextSong,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: classes.trackList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, this.trackList())));\n    }\n  }]);\n\n  return PlayerCustomized;\n}(Component);\n\nexport default PlayerCustomized;","map":{"version":3,"sources":["C:/IT_projects_Edu-Lab/arto_WWW/www.arto.boo.pl/src/components/PlayerCustomized/PlayerCustomized.js"],"names":["React","Component","Media","Player","controls","PlayPause","TrackContainer","MUSIC","SONGS_IMAGES","VolumeUpIcon","AlbumIcon","Image","Typography","CurrentTime","SeekBar","Duration","Volume","MuteUnmute","Panner","source","audioContext","panningAmount","_source","_audioContext","_initialPanningAmount","_splitter","createChannelSplitter","_gainLeft","createGain","_gainRight","_merger","createChannelMerger","connect","amount","gain","value","tracks","id","name","mp3Name","artist","imgSrc","Naydis","PlayerCustomized","actualPlayingTrackMp3Name","autoplay","isPlaying","actualSongImage","actualSongName","panner","map","track","state","setState","DefaultSongImage","console","log","classes","props","c","media","mainContainer","albumImageContainer","songImageContainer","actualImage","seekBarContainer","playerTime","seekBar","width","actualSongPlayer","_player","_connectSource","playNextSong","trackList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Media, Player, controls } from 'react-media-player'\r\nimport PlayPause from '../../mp3Player/withMediaProps'\r\nimport TrackContainer from \"../TrackContainer\";\r\nimport { MUSIC, SONGS_IMAGES } from \"../../constants\";\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport AlbumIcon from '@material-ui/icons/Album';\r\n\r\nimport Image from \"../Image\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\n\r\nconst {\r\n  CurrentTime,\r\n  // Progress,\r\n  SeekBar,\r\n  Duration,\r\n  Volume,\r\n  // Fullscreen,\r\n  MuteUnmute,\r\n  // autoplay,\r\n  // isPlaying\r\n} = controls;\r\n\r\n\r\nclass Panner {\r\n  constructor({source, audioContext, panningAmount = 0}) {\r\n    this._source = source;\r\n    this._audioContext = audioContext;\r\n    this._initialPanningAmount = panningAmount;\r\n  }\r\n\r\n  connect() {\r\n    this._splitter = this._audioContext.createChannelSplitter(2);\r\n    this._gainLeft = this._audioContext.createGain();\r\n    this._gainRight = this._audioContext.createGain();\r\n    this._merger = this._audioContext.createChannelMerger(2);\r\n    this._source.connect(\r\n      this._splitter,\r\n      0,\r\n      0\r\n    );\r\n    this._splitter.connect(\r\n      this._gainLeft,\r\n      0\r\n    );\r\n    this._splitter.connect(\r\n      this._gainRight,\r\n      1\r\n    );\r\n    this._gainLeft.connect(\r\n      this._merger,\r\n      0,\r\n      0\r\n    );\r\n    this._gainRight.connect(\r\n      this._merger,\r\n      0,\r\n      1\r\n    );\r\n    return this._merger\r\n  }\r\n\r\n  setPosition(amount) {\r\n    this._gainLeft.gain.value = amount <= 0 ? 1 : 1 - amount;\r\n    this._gainRight.gain.value = amount >= 0 ? 1 : 1 + amount;\r\n  }\r\n}\r\n\r\nconst tracks = [\r\n  {\r\n    id: 0,\r\n    name: 'Do Tanńca Kawałek',\r\n    mp3Name: 'do_tanca_kawalek',\r\n    artist: 'Poparzeni kawą trzy',\r\n    imgSrc: SONGS_IMAGES.Naydis,\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'Kici Kici miał',\r\n    mp3Name: 'kici_kici_mial',\r\n    artist: 'Marcus',\r\n    imgSrc: SONGS_IMAGES.Naydis,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Konik na biegunach',\r\n    mp3Name: 'konik_na_biegunach',\r\n    artist: 'Urszula',\r\n    imgSrc: SONGS_IMAGES.Naydis,\r\n  },\r\n\r\n];\r\n\r\n\r\nclass PlayerCustomized extends Component {\r\n  state = {\r\n    actualPlayingTrackMp3Name: tracks[0].mp3Name,\r\n    autoplay: false,\r\n    isPlaying: false,\r\n    actualSongImage: '',\r\n    actualSongName: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      actualSongImage: tracks[0].imgSrc\r\n    })\r\n  }\r\n\r\n\r\n  _connectSource = (source, audioContext) => {\r\n    this.panner = new Panner({source, audioContext});\r\n    return this.panner.connect()\r\n  };\r\n\r\n\r\n  trackList = () => (\r\n    tracks.map(track => {\r\n      return (\r\n        <TrackContainer\r\n          key={track.name}\r\n          track={track}\r\n          actualPlayingTrackMp3Name={this.state.actualPlayingTrackMp3Name}\r\n          onClickPlay={() => {\r\n            return (\r\n              this.setState({\r\n                actualPlayingTrackMp3Name: track.mp3Name,\r\n                actualSongName: track.name,\r\n                autoplay: true,\r\n                isPlaying: true,\r\n                actualSongImage: track.imgSrc ? track.imgSrc : SONGS_IMAGES.DefaultSongImage,\r\n              })\r\n            )\r\n          }}\r\n        />\r\n      )\r\n    })\r\n  );\r\n\r\n  playNextSong = () => {\r\n    console.log('wlaczam kolejny numer')\r\n  };\r\n\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n\r\n    return (\r\n      <Media ref={c => (this.media = c)}>\r\n        <div className={classes.mainContainer}>\r\n          <div className={classes.albumImageContainer}>\r\n            <div className={classes.songImageContainer}>\r\n              <Image\r\n                imgSrc={this.state.actualSongImage}\r\n                className={classes.actualImage}\r\n              />\r\n            </div>\r\n            <Typography>{this.state.actualSongName ? this.state.actualSongName : 'Wybierz utwor'}</Typography>\r\n\r\n            <PlayPause/>\r\n            {/*<div className={classes.volumeContainer}>*/}\r\n            {/*  <div className={classes.volumeText}><VolumeUpIcon/></div>*/}\r\n            {/*  <Volume className={this.props.volume}/>*/}\r\n            {/*</div>*/}\r\n            <div className={classes.seekBarContainer}>\r\n              <div className={classes.playerTime}><CurrentTime/>/<Duration/></div>\r\n              <div className={classes.seekBar}><SeekBar style={{width: '100%'}}/></div>\r\n            </div>\r\n            <div className={classes.actualSongPlayer}>\r\n              <Player\r\n                ref={c => (this._player = c)}\r\n                src={`/mp3/${this.state.actualPlayingTrackMp3Name}.mp3`}\r\n                connectSource={this._connectSource}\r\n                useAudioObject\r\n                autoPlay={this.state.autoplay}\r\n                isPlaying={this.state.isPlaying}\r\n                onEnded={this.playNextSong}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.trackList}>\r\n            {this.trackList()}\r\n          </div>\r\n\r\n        </div>\r\n      </Media>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default PlayerCustomized\r\n"]},"metadata":{},"sourceType":"module"}
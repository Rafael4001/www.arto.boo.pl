{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Media, Player, controls } from 'react-media-player';\nimport PlayPause from '../../mp3Player/withMediaProps';\nimport TrackContainer from \"../TrackContainer\";\nimport { MUSIC, SONGS_IMAGES } from \"../../constants\";\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport AlbumIcon from '@material-ui/icons/Album';\nimport Image from \"../Image\";\nimport { Typography } from \"@material-ui/core\";\nconst {\n  CurrentTime,\n  // Progress,\n  SeekBar,\n  Duration,\n  Volume,\n  // Fullscreen,\n  MuteUnmute // autoplay,\n  // isPlaying\n\n} = controls;\n\nclass Panner {\n  constructor({\n    source,\n    audioContext,\n    panningAmount = 0\n  }) {\n    this._source = source;\n    this._audioContext = audioContext;\n    this._initialPanningAmount = panningAmount;\n  }\n\n  connect() {\n    this._splitter = this._audioContext.createChannelSplitter(2);\n    this._gainLeft = this._audioContext.createGain();\n    this._gainRight = this._audioContext.createGain();\n    this._merger = this._audioContext.createChannelMerger(2);\n\n    this._source.connect(this._splitter, 0, 0);\n\n    this._splitter.connect(this._gainLeft, 0);\n\n    this._splitter.connect(this._gainRight, 1);\n\n    this._gainLeft.connect(this._merger, 0, 0);\n\n    this._gainRight.connect(this._merger, 0, 1);\n\n    return this._merger;\n  }\n\n  setPosition(amount) {\n    this._gainLeft.gain.value = amount <= 0 ? 1 : 1 - amount;\n    this._gainRight.gain.value = amount >= 0 ? 1 : 1 + amount;\n  }\n\n}\n\nconst tracks = [{\n  id: 0,\n  name: 'Lato 99',\n  mp3Name: 'Lato_99',\n  artist: 'Naydis',\n  imgSrc: SONGS_IMAGES.Naydis\n}, {\n  id: 1,\n  name: 'Życie To Są Chwile',\n  artist: 'Akcent',\n  mp3Name: 'ZycieToSaChwile',\n  imgSrc: SONGS_IMAGES.Akcent\n}, {\n  id: 2,\n  name: 'Tressure',\n  mp3Name: 'Tressure',\n  imgSrc: SONGS_IMAGES.Bruno_Mars\n}, {\n  id: 3,\n  name: 'BrunoMarsBezFoto',\n  mp3Name: 'Tressure'\n}];\n\nclass PlayerCustomized extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      actualPlayingTrackMp3Name: tracks[0].mp3Name,\n      autoplay: false,\n      isPlaying: false,\n      actualSongImage: '',\n      actualSongName: ''\n    });\n\n    _defineProperty(this, \"_connectSource\", (source, audioContext) => {\n      this.panner = new Panner({\n        source,\n        audioContext\n      });\n      return this.panner.connect();\n    });\n\n    _defineProperty(this, \"trackList\", () => tracks.map(track => {\n      return __jsx(TrackContainer, {\n        key: track.name,\n        track: track,\n        actualPlayingTrackMp3Name: this.state.actualPlayingTrackMp3Name,\n        onClickPlay: () => {\n          return this.setState({\n            actualPlayingTrackMp3Name: track.mp3Name,\n            actualSongName: track.name,\n            autoplay: true,\n            isPlaying: true,\n            actualSongImage: track.imgSrc ? track.imgSrc : SONGS_IMAGES.DefaultSongImage\n          });\n        }\n      });\n    }));\n\n    _defineProperty(this, \"playNextSong\", () => {\n      console.log('wlaczam kolejny numer');\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      actualSongImage: tracks[0].imgSrc\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return __jsx(Media, {\n      ref: c => this.media = c\n    }, __jsx(\"div\", {\n      className: classes.mainContainer\n    }, __jsx(\"div\", {\n      className: classes.albumImageContainer\n    }, __jsx(\"div\", {\n      className: classes.songImageContainer\n    }, __jsx(Image, {\n      imgSrc: this.state.actualSongImage,\n      className: classes.actualImage\n    })), __jsx(Typography, null, this.state.actualSongName ? this.state.actualSongName : 'Wybierz utwor'), __jsx(PlayPause, null), __jsx(\"div\", {\n      className: classes.seekBarContainer\n    }, __jsx(\"div\", {\n      className: classes.playerTime\n    }, __jsx(CurrentTime, null), \"/\", __jsx(Duration, null)), __jsx(\"div\", {\n      className: classes.seekBar\n    }, __jsx(SeekBar, {\n      style: {\n        width: '100%'\n      }\n    }))), __jsx(\"div\", {\n      className: classes.actualSongPlayer\n    }, __jsx(Player, {\n      ref: c => this._player = c,\n      src: `/mp3/${this.state.actualPlayingTrackMp3Name}.mp3`,\n      connectSource: this._connectSource,\n      useAudioObject: true,\n      autoPlay: this.state.autoplay,\n      isPlaying: this.state.isPlaying,\n      onEnded: this.playNextSong\n    }))), __jsx(\"div\", {\n      className: classes.trackList\n    }, this.trackList())));\n  }\n\n}\n\nexport default PlayerCustomized;","map":null,"metadata":{},"sourceType":"module"}
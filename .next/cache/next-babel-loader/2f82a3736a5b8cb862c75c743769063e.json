{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withMediaProps } from 'react-media-player';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\nimport Button from \"@material-ui/core/Button\";\nimport { SONGS_IMAGES } from \"../../constants\";\nimport Image from \"../Image\";\n\nvar TrackContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TrackContainer, _Component);\n\n  function TrackContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TrackContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TrackContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_handlePlayPause\", function () {\n      _this.props.media.playPause();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePlayClick\", function () {\n      _this.props.onClickPlay();\n\n      _this.props.media.play();\n    });\n\n    return _this;\n  }\n\n  _createClass(TrackContainer, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(_ref) {\n      var media = _ref.media;\n      return this.props.media.isPlaying !== media.isPlaying;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          track = _this$props.track,\n          actualPlayingTrackMp3Name = _this$props.actualPlayingTrackMp3Name,\n          media = _this$props.media;\n      var trackImage = track.imgSrc ? track.imgSrc : SONGS_IMAGES.DefaultSongImage;\n      return __jsx(\"div\", {\n        className: classNames(classes.mainContainer, _defineProperty({}, classes.activeBackground, actualPlayingTrackMp3Name === track.name))\n      }, __jsx(\"div\", {\n        className: classes.songImage\n      }, __jsx(Image, {\n        imgSrc: trackImage\n      })), actualPlayingTrackMp3Name === track.mp3Name && media.isPlaying ? __jsx(Button, {\n        className: classes.myButton,\n        key: track.mp3Name,\n        onClick: media.pause\n      }, __jsx(PauseCircleFilledIcon, {\n        className: classes.buttonIcon\n      })) : __jsx(Button, {\n        className: classes.myButton,\n        key: track.mp3Name,\n        onClick: this.handlePlayClick\n      }, __jsx(PlayCircleFilledIcon, {\n        className: classes.buttonIcon\n      })), __jsx(\"div\", null, __jsx(\"div\", {\n        className: classes.trackName\n      }, track.name), __jsx(\"div\", {\n        className: classes.trackArtistText\n      }, \"(\", track.artist && \" - \".concat(track.artist), \")\")));\n    }\n  }]);\n\n  return TrackContainer;\n}(Component);\n\nTrackContainer.displayName = 'TrackContainer';\nexport default withMediaProps(TrackContainer);","map":null,"metadata":{},"sourceType":"module"}
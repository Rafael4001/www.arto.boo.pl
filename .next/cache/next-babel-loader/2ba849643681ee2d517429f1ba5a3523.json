{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withMediaProps } from 'react-media-player';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\nimport Button from \"@material-ui/core/Button\";\nimport { SONGS_IMAGES } from \"../../constants\";\nimport Image from \"../Image\";\n\nclass TrackContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handlePlayClick\", () => {\n      this.props.onClickPlay();\n      this.props.media.play();\n    });\n  }\n\n  shouldComponentUpdate({\n    media\n  }) {\n    return this.props.media.isPlaying !== media.isPlaying;\n  }\n\n  render() {\n    const {\n      classes,\n      track,\n      actualPlayingTrackMp3Name,\n      media\n    } = this.props;\n    const trackImage = track.imgSrc ? track.imgSrc : SONGS_IMAGES.DefaultSongImage;\n    return __jsx(\"div\", {\n      className: classNames(classes.mainContainer, {\n        [classes.activeBackground]: actualPlayingTrackMp3Name === track.mp3Name\n      })\n    }, __jsx(\"div\", {\n      className: classes.songImage,\n      onClick: actualPlayingTrackMp3Name === track.mp3Name && media.isPlaying ? media.pause : this.handlePlayClick\n    }, __jsx(Image, {\n      imgSrc: trackImage\n    })), actualPlayingTrackMp3Name === track.mp3Name && media.isPlaying ? __jsx(Button, {\n      className: classes.myButton,\n      key: track.mp3Name,\n      onClick: media.pause\n    }, __jsx(PauseCircleFilledIcon, {\n      className: classes.buttonIcon\n    })) : __jsx(Button, {\n      className: classes.myButton,\n      key: track.mp3Name,\n      onClick: this.handlePlayClick\n    }, __jsx(PlayCircleFilledIcon, {\n      className: classes.buttonIcon\n    })), __jsx(\"div\", null, __jsx(\"div\", {\n      className: classes.trackName\n    }, track.name), __jsx(\"div\", {\n      className: classes.trackArtistText\n    }, \"(\", track.artist && ` - ${track.artist}`, \")\")));\n  }\n\n}\n\nTrackContainer.displayName = 'TrackContainer';\nexport default withMediaProps(TrackContainer);","map":null,"metadata":{},"sourceType":"module"}
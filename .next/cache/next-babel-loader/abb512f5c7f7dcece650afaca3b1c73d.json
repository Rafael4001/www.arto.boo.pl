{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\IT_projects_Edu-Lab\\\\arto_WWW\\\\www.arto.boo.pl\\\\src\\\\components\\\\MenuComponent\\\\MenuBurger\\\\MenuBurger.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { MENU_ITEMS } from \"../../../constants\";\nimport MyMenuItem from \"../../MenuItem/MenuItem.style\"; //TODO to trzeba poprawic bo sie wiesza\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  paper: {\n    marginRight: theme.spacing(2)\n  },\n  buttonBurgerMenu: {\n    // height: '3rem',\n    margin: '1rem',\n    width: 'auto',\n    boxShadow: `1px 0 5px 1px rgb(0,0,0,0.2)`,\n    borderRadius: '100%'\n  }\n}));\n\nconst getMenuItems = () => MENU_ITEMS.map(({\n  name,\n  link,\n  as\n}) => __jsx(MyMenuItem, {\n  key: name,\n  title: name,\n  href: link,\n  as: as,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}));\n\nexport default function MenuListComposition() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  } // return focus to the button when we transitioned from !open -> open\n\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Button, {\n    ref: anchorRef,\n    \"aria-controls\": open ? 'menu-list-grow' : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: handleToggle,\n    className: classes.buttonBurgerMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))), __jsx(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, ({\n    TransitionProps,\n    placement\n  }) => __jsx(Grow, _extends({}, TransitionProps, {\n    style: {\n      transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), __jsx(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(ClickAwayListener, {\n    onClickAway: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(MenuList, {\n    autoFocusItem: open,\n    id: \"menu-list-grow\",\n    onKeyDown: handleListKeyDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, getMenuItems()))))));\n}","map":{"version":3,"sources":["C:/IT_projects_Edu-Lab/arto_WWW/www.arto.boo.pl/src/components/MenuComponent/MenuBurger/MenuBurger.js"],"names":["React","Button","ClickAwayListener","Grow","Paper","Popper","MenuList","makeStyles","MenuIcon","MENU_ITEMS","MyMenuItem","useStyles","theme","root","display","paper","marginRight","spacing","buttonBurgerMenu","margin","width","boxShadow","borderRadius","getMenuItems","map","name","link","as","MenuListComposition","classes","open","setOpen","useState","anchorRef","useRef","handleToggle","prevOpen","handleClose","event","current","contains","target","handleListKeyDown","key","preventDefault","useEffect","focus","undefined","TransitionProps","placement","transformOrigin"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { MENU_ITEMS } from \"../../../constants\";\r\nimport MyMenuItem from \"../../MenuItem/MenuItem.style\";\r\n\r\n\r\n//TODO to trzeba poprawic bo sie wiesza\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n\r\n  buttonBurgerMenu: {\r\n    // height: '3rem',\r\n    margin: '1rem',\r\n    width: 'auto',\r\n    boxShadow: `1px 0 5px 1px rgb(0,0,0,0.2)`,\r\n    borderRadius: '100%',\r\n  },\r\n}));\r\n\r\nconst getMenuItems = () => (\r\n  MENU_ITEMS.map(({name, link, as}) => (\r\n    <MyMenuItem key={name} title={name} href={link} as={as}/>\r\n  ))\r\n);\r\n\r\nexport default function MenuListComposition() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen(prevOpen => !prevOpen);\r\n  };\r\n\r\n  const handleClose = event => {\r\n    if(anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if(event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if(prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Button\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n          className={classes.buttonBurgerMenu}\r\n        >\r\n          <MenuIcon/>\r\n        </Button>\r\n      </div>\r\n\r\n      <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n        {({TransitionProps, placement}) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                  {getMenuItems()}\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}